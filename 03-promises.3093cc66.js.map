{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAC/BC,EAAaF,SAASC,cAAe,kBACtCE,EAAYH,SAASC,cAAe,iBACnCG,EAAcJ,SAASC,cAAe,mBAI7C,SAASI,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACHH,EACAF,EAAQ,CAACH,WAASC,UAElBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IAZfR,EAAOgB,iBAAiB,UAgBxB,SAAsBC,GAClBA,EAAEC,iBAMF,IAJA,IAAIC,EAASC,SAASf,EAAYgB,OAC9BC,EAAQF,SAASjB,EAAWkB,OAC5BE,EAAOH,SAAShB,EAAUiB,OAErBG,EAAW,EAAGA,GAAYL,EAAQK,GAAY,EACnDlB,EAAckB,EAAUF,EAAQC,GAAMC,EAAW,IAChDC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACfmB,EAAA7B,GAAS8B,OAAOC,QAChB,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAChBmB,EAAA7B,GAAS8B,OAAOI,QAChB,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAInDR,EAAOiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst formEl = document.querySelector(\".form\");\nconst  delayInput = document.querySelector(`[name=\"delay\"]`);\nconst stepInput = document.querySelector(`[name=\"step\"]`);\nconst  amountInput = document.querySelector(`[name=\"amount\"]`)\n\nformEl.addEventListener(\"submit\", onFormSubmit);\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({position,delay})\n            }  else {\n                reject({position, delay})\n            }\n            }, delay)\n    });\n}\n\nfunction onFormSubmit(e){\n    e.preventDefault();\n\n    let amount = parseInt(amountInput.value);\n    let delay = parseInt(delayInput.value);\n    let step = parseInt(stepInput.value);\n\n    for (let position = 1; position <= amount; position += 1) {\n        createPromise(position, delay + step*(position - 1))\n        .then(({ position, delay }) => {\n            Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n            );\n        })\n        .catch(({ position, delay }) => {\n            Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n            );\n        });\n    }\n    formEl.reset(); \n}\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","amount","parseInt","value","delay1","step","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.3093cc66.js.map"}